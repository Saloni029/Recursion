// You are given a number n and a number m representing number of rows and columns in a maze.
// You are standing in the top-left corner and have to reach the bottom-right corner. 
// In a single move you are allowed to jump 1 or more steps horizontally (as h1, h2, .. ), or 1 or more steps vertically (as v1, v2, ..) or 1 or more steps diagonally (as d1, d2, ..). 
// Complete the body of getMazePath function - without changing signature - to get the list of all paths that can be used to move from top-left to bottom-right.

list<string> getMazePathsjump(int sr, int sc, int dr, int dc){ 
	 if(sr == dr && sc == dc){
	 	   list<string> bres ; 
	 	   bres.push_back("") ;
	 	   return bres ; 
	 }
	 list<string> paths ;
	 for( int i =1 ; i <= dc-sc ; i++ ){
	 	  list<string> h = getMazePathsjump(sr, sc+i , dr, dc) ;
	 	  string j = to_string(i) ;
      for(string p1:h){
	 		    paths.push_back("h" + j + p1) ;
		  }
	 }
	 for( int i =1 ; i <= dr-sr ; i++ ){
	 	  list<string> v = getMazePathsjump(sr+i, sc , dr, dc) ;
	 	  string j = to_string(i) ;
	 	  for(string p2:v){
	 		   paths.push_back("v" + j + p2) ;
		  }
	 }
	 for( int i =1 ; i <= dc-sc && i <= dr-sr ; i++ ){
	 	  list<string> d = getMazePathsjump(sr+i, sc+i , dr, dc) ;
	 	  string j = to_string(i) ;
	 	  for(string p3:d){
	 		   paths.push_back("d" + j + p3) ;
		  }
	 }
	return paths ; 
}
